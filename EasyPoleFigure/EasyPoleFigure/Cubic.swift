//
//  Cubicswift
//  EasyPoleFigure
//
//  Created by 천성원 on 2022/04/15
//

import Foundation
import simd

// 전체 Cubic Operator
let cubicData = onesideCubicOperator + othersideCubicOperator
// 한 방향으로의 Operator
let onesideCubicOperator: [double3x3] = [
    [[ 1,  0,  0],
     [ 0,  1,  0],
     [ 0,  0,  1]],

    [[ 0,  0,  1],
     [ 1,  0,  0],
     [ 0,  1,  0]],

    [[ 0,  1,  0],
     [ 0,  0,  1],
     [ 1,  0,  0]],

    [[ 0,  1,  0],
     [ 1,  0,  0],
     [ 0,  0,  1]],

    [[ 1,  0,  0],
     [ 0 , 0,  1],
     [ 0,  1,  0]],

    [[ 0,  0,  1],
     [ 0,  1,  0],
     [ 1,  0,  0]],

    [[ 0, -1,  0],
     [ 1,  0,  0],
     [ 0,  0,  1]],

    [[-1,  0,  0],
     [ 0, -1,  0],
     [ 0,  0,  1]],

    [[ 0,  1,  0],
     [-1,  0,  0],
     [ 0,  0,  1]],

    [[-1,  0,  0],
     [ 0,  0,  1],
     [ 0,  1,  0]],

    [[ 0,  0, -1],
     [-1,  0,  0],
     [ 0,  1,  0]],

    [[ 1,  0,  0],
     [ 0,  0, -1],
     [ 0,  1,  0]],

    [[ 0,  0, -1],
     [ 0,  1,  0],
     [ 1,  0,  0]],

    [[ 0, -1,  0],
     [ 0,  0, -1],
     [ 1,  0,  0]],

    [[ 0,  0,  1],
     [ 0, -1,  0],
     [ 1,  0,  0]],

    [[-1,  0,  0],
     [ 0,  1,  0],
     [ 0,  0,  1]],

    [[ 0, -1,  0],
     [-1,  0,  0],
     [ 0,  0,  1]],

    [[ 1,  0,  0],
     [ 0, -1,  0],
     [ 0,  0,  1]],

    [[ 0,  0, -1],
     [ 1,  0,  0],
     [ 0,  1,  0]],

    [[-1,  0,  0],
     [ 0,  0, -1],
     [ 0,  1,  0]],

    [[ 0,  0,  1],
     [-1,  0,  0],
     [ 0,  1,  0]],

    [[ 0, -1,  0],
     [ 0,  0,  1],
     [ 1,  0,  0]],

    [[ 0,  0, -1],
     [ 0, -1,  0],
     [ 1,  0,  0]],

    [[ 0,  1,  0],
     [ 0,  0, -1],
     [ 1,  0,  0]]
].map { double3x3($0) }

// 반대방향의 Operator
let othersideCubicOperator = onesideCubicOperator.map { $0 * -1 }

//let cubicData = leftCubicOperator + rightCubicOperator
//let leftCubicOperator: [[SIMD3<Double>]] = [
//    [[ 1,  0,  0],
//     [ 0,  1,  0],
//     [ 0,  0,  1]],
//
//    [[ 0,  0,  1],
//     [ 1,  0,  0],
//     [ 0,  1,  0]],
//
//    [[ 0,  1,  0],
//     [ 0,  0,  1],
//     [ 1,  0,  0]],
//
//    [[ 0,  1,  0],
//     [ 1,  0,  0],
//     [ 0,  0,  1]],
//
//    [[ 1,  0,  0],
//     [ 0 , 0,  1],
//     [ 0,  1,  0]],
//
//    [[ 0,  0,  1],
//     [ 0,  1,  0],
//     [ 1,  0,  0]],
//
//    [[ 0, -1,  0],
//     [ 1,  0,  0],
//     [ 0,  0,  1]],
//
//    [[-1,  0,  0],
//     [ 0, -1,  0],
//     [ 0,  0,  1]],
//
//    [[ 0,  1,  0],
//     [-1,  0,  0],
//     [ 0,  0,  1]],
//
//    [[-1,  0,  0],
//     [ 0,  0,  1],
//     [ 0,  1,  0]],
//
//    [[ 0,  0, -1],
//     [-1,  0,  0],
//     [ 0,  1,  0]],
//
//    [[ 1,  0,  0],
//     [ 0,  0, -1],
//     [ 0,  1,  0]],
//
//    [[ 0,  0, -1],
//     [ 0,  1,  0],
//     [ 1,  0,  0]],
//
//    [[ 0, -1,  0],
//     [ 0,  0, -1],
//     [ 1,  0,  0]],
//
//    [[ 0,  0,  1],
//     [ 0, -1,  0],
//     [ 1,  0,  0]],
//
//    [[-1,  0,  0],
//     [ 0,  1,  0],
//     [ 0,  0,  1]],
//
//    [[ 0, -1,  0],
//     [-1,  0,  0],
//     [ 0,  0,  1]],
//
//    [[ 1,  0,  0],
//     [ 0, -1,  0],
//     [ 0,  0,  1]],
//
//    [[ 0,  0, -1],
//     [ 1,  0,  0],
//     [ 0,  1,  0]],
//
//    [[-1,  0,  0],
//     [ 0,  0, -1],
//     [ 0,  1,  0]],
//
//    [[ 0,  0,  1],
//     [-1,  0,  0],
//     [ 0,  1,  0]],
//
//    [[ 0, -1,  0],
//     [ 0,  0,  1],
//     [ 1,  0,  0]],
//
//    [[ 0,  0, -1],
//     [ 0, -1,  0],
//     [ 1,  0,  0]],
//
//    [[ 0,  1,  0],
//     [ 0,  0, -1],
//     [ 1,  0,  0]]
//].map { [SIMD3<Double>]($0) }
//let rightCubicOperator: [[SIMD3<Double>]] = [
//    [[-1,  0,  0],
//     [ 0, -1,  0],
//     [ 0,  0, -1]],
//
//    [[ 0,  0, -1],
//     [-1,  0,  0],
//     [ 0, -1,  0]],
//
//    [[ 0, -1,  0],
//     [ 0,  0, -1],
//     [-1,  0,  0]],
//
//    [[ 0, -1,  0],
//     [-1,  0,  0],
//     [ 0,  0, -1]],
//
//    [[-1,  0,  0],
//     [ 0 , 0, -1],
//     [ 0, -1,  0]],
//
//    [[ 0,  0, -1],
//     [ 0, -1,  0],
//     [-1,  0,  0]],
//
//    [[ 0,  1,  0],
//     [-1,  0,  0],
//     [ 0,  0, -1]],
//
//    [[ 1,  0,  0],
//     [ 0,  1,  0],
//     [ 0,  0, -1]],
//
//    [[ 0, -1,  0],
//     [ 1,  0,  0],
//     [ 0,  0, -1]],
//
//    [[ 1,  0,  0],
//     [ 0,  0, -1],
//     [ 0, -1,  0]],
//
//    [[ 0,  0,  1],
//     [ 1,  0,  0],
//     [ 0, -1,  0]],
//
//    [[-1,  0,  0],
//     [ 0,  0,  1],
//     [ 0, -1,  0]],
//
//    [[ 0,  0,  1],
//     [ 0, -1,  0],
//     [-1,  0,  0]],
//
//    [[ 0,  1,  0],
//     [ 0,  0,  1],
//     [-1,  0,  0]],
//
//    [[ 0,  0, -1],
//     [ 0,  1,  0],
//     [-1,  0,  0]],
//
//    [[ 1,  0,  0],
//     [ 0, -1,  0],
//     [ 0,  0, -1]],
//
//    [[ 0,  1,  0],
//     [ 1,  0,  0],
//     [ 0,  0, -1]],
//
//    [[-1,  0,  0],
//     [ 0,  1,  0],
//     [ 0,  0, -1]],
//
//    [[ 0,  0,  1],
//     [-1,  0,  0],
//     [ 0, -1,  0]],
//
//    [[ 1,  0,  0],
//     [ 0,  0,  1],
//     [ 0, -1,  0]],
//
//    [[ 0,  0, -1],
//     [ 1,  0,  0],
//     [ 0, -1,  0]],
//
//    [[ 0,  1,  0],
//     [ 0,  0, -1],
//     [-1,  0,  0]],
//
//    [[ 0,  0,  1],
//     [ 0,  1,  0],
//     [-1,  0,  0]],
//
//    [[ 0, -1,  0],
//     [ 0,  0,  1],
//     [-1,  0,  0]]
//].map { [SIMD3<Double>]($0) }
